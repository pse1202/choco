#!/usr/bin/env python
"""
choco - An KakaoTalk Bot
Copyright 2014, ssut
Licensed under the MIT License.

Note: DO NOT EDIT THIS FILE.
Run ./start, then edit config.py
Then run ./start again
"""

import sys, os, imp, optparse
from textwrap import dedent as trim

from choco import Choco

def create_default_config(fn):
    f = open(fn, 'w')
    print >> f, trim("""\
      #-*- coding: utf-8 -*-
      '''
      You have set "choco_auth" to redis db
      redis> hset choco_auth mail [kakaotalk email]
      redis> hset choco_auth password [kakaotalk password]
      redis> hset choco_auth client [client name]
      redis> hset choco_auth uuid [any text]
      redis> hset choco_auth x_vc [x-vc token]

      If you have base64 encoded device_uuid, enter this command:
      redis> hset choco_auth device_uuid [b64 uuid text]
      '''

      THREAD_COUNT = 32

      REDIS_HOST = 'localhost'
      REDIS_PORT = 6379
      REDIS_DB = 0
      REDIS_PASSWORD = None

      DEBUG = True
      SAVE_ROOM = False

      # stdout, stderr save destination. (when DEBUG is False)
      STDOUT = 'stdout.log'
      STDERR = 'stderr.log'

      COMMAND_PREFIX = '!' # ex: ',', '.' ..
      EXCLUDED_MODULES = ()
      """)
    f.close()

def main(argv=None):
    config_file = os.path.join('.', 'config.py')
    tmp_dir = os.path.join('.', 'tmp')
    if not os.path.isfile(config_file):
        create_default_config(config_file)
        print >> sys.stdout, "Created config file. Edit config.py and run choco again"
        sys.exit(0)
    if not os.path.isdir(tmp_dir):
      os.mkdir(tmp_dir, 0777)

    try:
        import config
    except Exception, e:
        print >> sys.stderr, "Error: Couldn't import a config file!"
        sys.exit(1)

    parser = optparse.OptionParser('%prog [options]')
    parser.add_option('-d', '--debug', action='store_true', default=False,
        help='debug mode (verbose)')
    parser.add_option('-w', '--workers', help='set worker(thread) count')
    parser.add_option('-m', '--modules', action='store_true', default=False,
        help='show module list')
    opts, args = parser.parse_args(argv)
    if args: print >> sys.stderr, 'Warning: ignoring spurious arguments'

    if opts.debug: config.DEBUG = True
    if opts.workers: config.WORKER_COUNT = int(opts.workers)
    if opts.modules:
        from lib.endpoint import Endpoint
        from modules import set_endpoint, module_loader
        ep = Endpoint()
        home = os.getcwd()
        set_endpoint(ep)
        module_loader(home, config)
        print ep.routes
        sys.exit(0)

    if not config.DEBUG:
      sys.stdout = open(config.STDOUT, 'ab')
      sys.stderr = open(config.STDERR, 'ab')

    Choco.run(config)

if __name__ == '__main__':
    main()
